//1 - Fa√ßa cinco programas, um para cada opera√ß√£o aritm√©tica b√°sica. Seu programa deve ter duas constantes, a e b, definidas no come√ßo com os valores que ser√£o operados. Fa√ßa programas para:



const sum = (a, b) => a + b;
// console.log(sum(10,20));


const subtraction = (a, b) => a - b;
// console.log(subtraction(50, 10));

const multiply = (a, b) => a * b;
// console.log(multiply(3, 30));

const divide = (a, b) => a / b;
// console.log(divide(50, 10));

const rest = (a, b) => a % b;
// console.log(rest(10,5));


// ------------------------------------------------------------------------------------------------------------------------------------------------

//2- Fa√ßa um programa que retorne o maior de dois n√∫meros. Defina no come√ßo do programa duas constantes com os valores que ser√£o comparados.

//  COM HOF

// const numero1 = 894511;
// const numero2 = 8945;

const biggestNumber = (num1, num2) => num1 > num2 ? num1 : num2;
// console.log(biggestNumber(numero1, numero2))


// jeito cl√°ssico eu diria!

function biggestNumber2(num1, num2) {

    if (num1 > num2) {
        return num1;
    } else if (num1 < num2) {
        return num2;
    } else if (num1 && num2 !== typeof 'number') {
        return 'Digite somente n√∫meros'
    }

}
// console.log(biggestNumber2(numero1, numero2));
// console.log(biggestNumber2(10, 'tr√™s'));


// ------------------------------------------------------------------------------------------------------------------------------------------------

// 3 Fa√ßa um programa que retorne o maior de tr√™s n√∫meros. Defina no come√ßo do programa tr√™s constantes com os valores que ser√£o comparados





const biggestOfThreeNumbers = ((num1, num2, num3) => Math.max(num1, num2, num3));

function biggestOf3Numbers(num1, num2, num3) {

    const result = Math.max(num1, num2, num3);
    return result !== typeof 'number' ? 'caractere inv√°lido, digite apenas n√∫meros!!' : result;
}

// console.log(biggestOfThreeNumbers(numero1, numero2, numero3));
// console.log(biggestOf3Numbers(numero1, numero2, numero3));


// ------------------------------------------------------------------------------------------------------------------------------------------------
// 4 Fa√ßa um programa que, dado um valor definido numa constante, retorne "positive" se esse valor for positivo, "negative" se for negativo e "zero" caso contr√°rio.


const value1 = 50;
const value2 = -50;

const verifyIsPositive = (num => num < 0 ? 'negative' : 'Positive');

// console.log(verifyIsPositive(value1));
// console.log(verifyIsPositive(value2));

// ------------------------------------------------------------------------------------------------------------------------------------------------



// 5 üöÄ Fa√ßa um programa que defina tr√™s constantes com os valores dos tr√™s √¢ngulos internos de um tri√¢ngulo. Retorne true se os √¢ngulos representarem os √¢ngulos de um tri√¢ngulo e false, caso contr√°rio. Se algum √¢ngulo for inv√°lido o programa deve retornar uma mensagem de erro.

// Dados tr√™s segmentos de reta distintos, se a soma das medidas de dois deles √© sempre maior que a medida do terceiro, ent√£o, eles podem formar um tri√¢ngulo.

const cat1 = 16;
const cat2 = 30;
const hipotenusa = 30;


const verifyIfIsTriangle = ((num1, num2, num3) => num1 + num2 > num3 ? true : 'Erro! As medidas informadas n√£o formam um tri√¢ngulo');


// console.log(verifyIfIsTriangle(cat1,cat2,hipotenusa));


// ------------------------------------------------------------------------------------------------------------------------------------------------

// 6Escreva um programa que receba o nome de uma pe√ßa de xadrez e retorne os movimentos que ela faz.


// let chessPeace = prompt('Digite o nome da pe√ßa de xadrez desejada, e informarei oque √©la faz! :)')



// switch (chessPeace.toLowerCase()) {
//     case 'pe√£o':
//         alert('O Pe√£o anda apenas para frente apenas de casa em casa, e pode eliminar pe√ßas em √¢ngulos diagonais apenas uma casa por vez!');
//         break;
//     case 'torre':
//         alert('A torre anda apenas nos √¢ngulos horizontal e verifical, √© possivel trocar de lugar com o rei caso a linha entre eles estiver vazia.');
//         break;
//     case 'cavalo':
//         alert('O Cavalo se mexe andando 3 casas na horizontal e uma vertical em forma de L, tamb√©m pode pular sobre outras pe√ßas');
//         break;
//     case 'bispo':
//         alert('Obispo se movimenta apenas em √¢ngulos diagonais em quantas casas desejar, para qualquer lado desde que seja diagonal.');
//     case 'rainha':
//         alert('A Rainha se movimenta para em qualquer dire√ß√£o e quantas casas desejar');
//     case 'rei':
//         alert('O Rei apenas se movimenta uma casa por vez, e pode eliminar pe√ßas em ualquer dire√ß√£o, e se for cercado √©  \nCHEQUE MATE IRM√ÉO!!');
//         break;
//     default:
//         alert('Nome da pe√ßa inv√°lido' )

//         break;
// }


// ------------------------------------------------------------------------------------------------------------------------------------------------

// 7 Escreva um programa que converte uma nota dada em porcentagem (de 0 a 100) em conceitos de A a F. Siga essas regras:
// Porcentagem >= 90 -> A
// Porcentagem >= 80 -> B
// Porcentagem >= 70 -> C
// Porcentagem >= 60 -> D
// Porcentagem >= 50 -> E
// Porcentagem < 50 -> F
// O programa deve retornar uma mensagem de erro e encerrar se a nota passada for menor que 0 ou maior que 100.



function percentConverter(nota) {


    const porcentagem = nota * 100


    if (porcentagem >= 90) {
        return 'Nota A'
    } else if (porcentagem >= 80) {
        return 'Nota B'
    } else if (porcentagem >= 70) {
        return 'Nota C'
    } else if (porcentagem >= 60) {
        return 'Nota D'
    } else if (porcentagem >= 50) {
        return 'Nota E'
    } else if (porcentagem < 50) {
        return 'Nota F'
    } else if (porcentagem === 0 && porcentagem > 100) {
        return 'ERRO a nota deve ser de 0 a 100%'
    }



}

// console.log(percentConverter(0.90))

// ------------------------------------------------------------------------------------------------------------------------------------------------

// 5 Escreva um programa que defina tr√™s n√∫meros em constantes e retorne true se pelo menos uma das tr√™s for par. Caso contr√°rio, ele retorna false.


const numero1 = 8;
const numero2 = 10;
const numero3 = 4;

const arrOfNumbers = [numero1, numero2, numero3]
const pairVerify = arrOfNumbers.some(pair => pair % 2 === 0); /*solu√ß√£o com HOF */



function verifyIsPair(num1, num2, num3) {

    if (num1 % 2 === 0 || num2 % 2 === 0 || num3 % 2 === 0) {
        return true;

    } else {

        return false;
    }


}


// console.log(verifyIsPair(numero1, numero2, numero3));
// console.log(pairVerify);


// ------------------------------------------------------------------------------------------------------------------------------------------------
//  6 Escreva um programa que defina tr√™s n√∫meros em constantes e retorne true se pelo menos uma das tr√™s for √≠mpar. Caso contr√°rio, ele retorna false.


const verifyIfOdds = arrOfNumbers.some(odd => odd % 2 === 1  );


function verifyIsOdd(num1, num2, num3) {

    if (num1 % 2 === 1 || num2 % 2 === 1 || num3 % 2 === 1) {
        return true;

    } else {

        return false;
    }


};

// console.log(verifyIsOdd(numero1, numero2, numero3));
// console.log(verifyIfOdds);


// -----------------------------------------------------------------------------------------------------------------------------------------
// 10 -Escreva um programa que se inicie com dois valores em duas constantes diferentes: o custo de um produto e seu valor de venda. A partir dos valores, calcule quanto de lucro (valor de venda descontado o custo do produto) a empresa ter√° ao vender mil desses produtos.

// Atente que, sobre o custo do produto, incide um imposto de 20%.
// Seu programa tamb√©m deve emitir uma mensagem de erro e encerrar caso algum dos seus valores de entrada seja menor que zero.
// O lucro de um produto √© o resultado da subtra√ß√£o do valor de venda pelo custo do mesmo, sendo que o imposto de 20% tamb√©m faz parte do valor de custo.
// valorCustoTotal = valorCusto + impostoSobreOCusto
// lucro = valorVenda - valorCustoTotal (lucro de um produto)

const valorCusto = 50.00
const impostoSobreOCusto = 20.0

const valorDeCustoTotal = valorCusto + impostoSobreOCusto
const valorVenda = 90.00

const lucro =  valorVenda - valorDeCustoTotal

const calcProfit = (profit) => profit * 1000;/* solu√ß√£o com HOFs */



console.log(calcProfit(lucro));


